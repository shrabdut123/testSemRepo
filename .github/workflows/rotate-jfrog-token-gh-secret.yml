name: "Rotate Admin JFrog Token"

on:
  schedule:
    - cron: "0 0 30 * *"
  workflow_dispatch:
    inputs:
      EXPIRY_IN_SECONDS:
        type: string
        required: false
        default: "3024000" # 35 days in seconds
        description: Defaults to 85 days. Set it if you are using a different duration.
      JF_PLATFORM_URL:
        type: string
        required: false
        default: "https://artifactory.build.ingka.ikea.com/"
        description: Defaults to current production value. Set it if you are using a different Artifactory setup, like staging.        
        

jobs:
  rotate-jfrog-token-in-gh-secret:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.set-output.outputs.UPDATED_ACCESS_TOKEN }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Rotate JFrog Token
        uses: ingka-group-digital/es-jfrog-workflows-library/composite/jfrog-token-rotate@v1
        id: token-rotator
        with:
          JFROG_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_TEST_TOKEN }}
          JF_PLATFORM_URL: ${{ inputs.JF_PLATFORM_URL }}
          EXPIRY_IN_SECONDS: ${{ inputs.EXPIRY_IN_SECONDS }}
      - name: Update new token in Github actions secret
        env:
          GH_TOKEN: ${{ secrets.SA_GITHUB_REPO_TOKEN }}
        shell: bash --norc -eo pipefail {0}
        run: |
          gh secret set ARTIFACTORY_TEST_TOKEN --app actions --body ${{ steps.token-rotator.outputs.NEW_ACCESS_TOKEN }}
          echo "NEW_ACCESS_TOKEN1=${{ steps.token-rotator.outputs.NEW_ACCESS_TOKEN }}
          echo "MY_CLIENT_ID = ${{ steps.token-rotator.outputs.ARTIFACTORY_USERNAME }}:${{ steps.token-rotator.outputs.NEW_ACCESS_TOKEN }}"
          echo "MY_CLIENT_ID_64=$(echo ${{ MY_CLIENT_ID }} | base64)"
          gh secret set ARTIFACTORY_TOKEN --app actions --body ${{ MY_CLIENT_ID_64 }}

      - name: set variable for output
        id: set-output
        run: |
          export ACCESS_TOKEN=${{ steps.token-rotator.outputs.NEW_ACCESS_TOKEN }} >> $GITHUB_ENV
          echo "UPDATED_ACCESS_TOKEN=${{ env.ACCESS_TOKEN }}" >> $GITHUB_OUTPUT