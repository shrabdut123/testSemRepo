name: "Rotate Admin JFrog Token"

on:
  schedule:
    - cron: "0 0 30 * *"
  workflow_dispatch:
    inputs:
      EXPIRY_IN_SECONDS:
        type: string
        required: false
        default: "3024000" # 35 days in seconds
        description: Defaults to 85 days. Set it if you are using a different duration.
      JF_PLATFORM_URL:
        type: string
        required: false
        default: "https://artifactory.build.ingka.ikea.com/"
        description: Defaults to current production value. Set it if you are using a different Artifactory setup, like staging.        
        

jobs:
  rotate-jfrog-token-in-gh-secret:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.set-output.outputs.UPDATED_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Make a POST request using curl
        id: step1
        run: |
          response=$(curl "https://artifactory.build.ingka.ikea.com/access/api/v1/tokens" -H "Authorization: Bearer ${{ secrets.ARTIFACTORY_TEST_TOKEN }}" -H "Content-Type: application/json" -X POST -d '{"refreshable": true,"expires_in": 86400 }')
          echo "access_token=$(echo $response | jq -r '.access_token')" >> $GITHUB_ENV
      - name: Encode a username&token to Base64
        id: encode-username-token
        run: |
          echo "ARTIFACTORY_TEST_USERNAME: ${{ vars.ARTIFACTORY_TEST_USERNAME }}"
          echo "Access token here: $access_token"
          username_token=$(echo -n "${{ vars.ARTIFACTORY_TEST_USERNAME }}:$access_token" | base64)
          echo "Username prefix here: ${{ vars.ARTIFACTORY_TEST_USERNAME }}"
          echo "Username token here: $username_token"
          echo "::set-output name=access_token::$access_token"
          echo "::set-output name=username_token::$username_token"
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh
      - name: Unset GITHUB_TOKEN
        run: |
          unset GITHUB_TOKEN
      - name: Authenticate GitHub CLI interactively or using PAT
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}  # Replace with your actual PAT secret if needed
        run: |
          echo $GITHUB_PAT | gh auth login --with-token

      - name: Verify Authentication
        run: |
          gh auth status
      - name: Set GitHub Secrets using GitHub CLI
        run: |
          echo "Access token: ${{ steps.encode-username-token.outputs.access_token }}"
          echo "Username token: ${{ steps.encode-username-token.outputs.username_token }}"
          gh secret set ARTIFACTORY_TEST_TOKEN --body "${{ steps.encode-username-token.outputs.access_token }}"
          gh secret set ARTIFACTORY_TEST_TOKEN1 --body "${{ steps.encode-username-token.outputs.username_token }}"
          

