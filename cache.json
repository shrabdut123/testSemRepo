{"ca1b58a02db87378247541d2e6653877": "# Documentation for `addNumbers` function\n\n## Function\n\n### `addNumbers(a, b)`\n\nThis function takes two numbers as arguments and returns their sum.\n\n#### Parameters\n\n- `a` (Number): The first number to be added.\n- `b` (Number): The second number to be added.\n\n#### Returns\n\n- (Number): The sum of `a` and `b`.\n\n## Example\n\n```js\nconst num1 = 50;\nconst num2 = 100;\nconsole.log(`The sum of ${num1} and ${num2} is:`, addNumbers(num1, num2));\n```\n\nIn this example, the function `addNumbers` is called with `num1` and `num2` as arguments. The sum of `num1` and `num2` is then logged to the console.\n\n## Module Exports\n\nThe `addNumbers` function is exported as a module, which means it can be imported and used in other JavaScript files.\n\n```js\nmodule.exports = addNumbers;\n```", "7b17af30ff2a4081d043a16911778eaf": "# FullServe Adapters Orders Documentation\n\nThis package provides a function to create an order request.\n\n## Function: createOrderRequest\n\nThis function is used to create an order request.\n\n### Parameters:\n\n- `items`: A list of pairs of `SpeCartItem` and `ReservationId`. `SpeCartItem` represents a specific item in the cart and `ReservationId` is the unique identifier for the reservation of the item.\n- `productTotal`: An instance of `SpeCartOrderSubtotalPrice` which represents the subtotal price of the order.\n- `summaryPrice`: An instance of `SpeCartSummary` which represents the summary of the cart price.\n- `currencyCode`: A string representing the currency code.\n- `orderNumberId`: A string representing the order number id.\n- `orderNumberSource`: A string representing the order number source.\n- `contactDetails`: An instance of `ContactDetails` which contains the contact details of the customer.\n- `countryCode`: A string representing the country code.\n- `languageCode`: A string representing the language code.\n- `storeId`: A string representing the store id.\n- `consumerName`: A string representing the consumer name.\n- `selectedTimeWindow`: An instance of `CheckoutTimeWindowsResponse` which represents the selected time window for delivery.\n- `deliveryArrangementsResponse`: An instance of `CheckoutDeliveryArrangementsResponse` which represents the delivery arrangements response.\n- `checkoutTimeWindowId`: A string representing the checkout time window id.\n- `deliveryPrice`: An instance of `SpeCartOrderSubtotalPrice` which represents the delivery price.\n\n### Returns:\n\n- `OrderCreationRequest`: An instance of `OrderCreationRequest` which represents the order creation request.\n\n### Exceptions:\n\n- `DeliveryLineNotFoundException`: This exception is thrown when the delivery line is not found.\n- `DeliveryPriceException`: This exception is thrown when there is an issue with the delivery price.\n- `PickUpPointNotFoundException`: This exception is thrown when the pickup point is not found."}